plugins {
  id 'war'
}

apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'war'

repositories {
  mavenCentral()
}

dependencies {
  // Jakarta Servlet 5.0 API
  providedCompile 'jakarta.servlet:jakarta.servlet-api:5.0.0'
  // Connector para MySQL
  implementation "mysql:mysql-connector-java:8.0.15"
}

// Java 15
sourceCompatibility = 15
targetCompatibility = 15

// Essa versão afeta o nome do .war
version = ''

war {
  archiveExtension = 'war'
  archiveBaseName = 'app'
  archiveVersion = ''
  webXml = file('src/main/webapp/web.xml')
  metaInf { from 'src/main/webapp/context.xml' }
}

def webappsPath = '/usr/local/tomcat/webapps'

task cleanUp(type: Delete) {
  description "Limpa o diretório de build e remove a aplicação do ${webappsPath}."
  println "Removendo ${buildDir}, ${webappsPath}/app.war e ${webappsPath}/webapps/app"
  delete "${buildDir}", "${webappsPath}/app.war", "${webappsPath}/app"
  followSymlinks = true
}

task deployApp(type: Copy) {
    dependsOn(war)
    println "Copiando ${buildDir}/libs/app.war para ${webappsPath}/app.war"
    from "${buildDir}/libs/app.war"
    into "${webappsPath}"

}

task restartTomcat(type:Exec) {
  dependsOn(deployApp)
  workingDir '/usr/local/tomcat/bin'
  commandLine 'catalina.sh stop; catalina.sh start;'

  standardOutput = new ByteArrayOutputStream()
  ext.output = {
    return standardOutput.toString()
  }
}

cleanUp
build.dependsOn << deployApp
